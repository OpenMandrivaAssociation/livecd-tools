diff -Nur livecd-tools-18.8.orig/imgcreate/kickstart.py livecd-tools-18.8/imgcreate/kickstart.py
--- livecd-tools-18.8.orig/imgcreate/kickstart.py	2012-10-17 11:01:56.000000000 +0000
+++ livecd-tools-18.8/imgcreate/kickstart.py	2012-10-17 11:03:43.175820169 +0000
@@ -486,7 +486,7 @@
         return default
     return int(ks.handler.bootloader.timeout)
 
-def get_kernel_args(ks, default = "ro rd.live.image quiet"):
+def get_kernel_args(ks, default = "ro rd.live.image"):
     if not hasattr(ks.handler.bootloader, "appendLine"):
         return default
     if ks.handler.bootloader.appendLine is None:
diff -Nur livecd-tools-18.8.orig/imgcreate/live.py livecd-tools-18.8/imgcreate/live.py
--- livecd-tools-18.8.orig/imgcreate/live.py	2012-10-17 11:01:56.000000000 +0000
+++ livecd-tools-18.8/imgcreate/live.py	2012-10-17 14:33:17.736813715 +0000
@@ -114,9 +114,9 @@
         """
         r = kickstart.get_kernel_args(self.ks)
         if os.path.exists(self._instroot + "/usr/bin/rhgb"):
-            r += " rhgb"
+            r += " rhgb vga=788 splash=silent logo.nologo"
         if os.path.exists(self._instroot + "/usr/bin/plymouth"):
-            r += " rhgb"
+            r += " rhgb vga=788 splash=silent logo.nologo"
         return r
         
     def _get_mkisofs_options(self, isodir):
@@ -297,6 +297,7 @@
             makedirs(os.path.dirname(path))
         f = open(path, "a")
         f.write('filesystems+="' + self.__extra_filesystems() + ' "\n')
+#        f.write('drivers+=" iso9660 isofs ext3 "' + self.__extra_drivers() + ' "\n')
         f.write('drivers+="' + self.__extra_drivers() + ' "\n')
         f.write('add_dracutmodules+=" dmsquash-live "')
         f.close()
@@ -321,7 +322,7 @@
 
         if os.path.exists("/usr/bin/isohybrid"):
             if os.path.exists(isodir + "/isolinux/efiboot.img"):
-                subprocess.call(["/usr/bin/isohybrid", "-u", "-m", iso])
+                subprocess.call(["/usr/bin/isohybrid", "-u", iso])
             else:
                 subprocess.call(["/usr/bin/isohybrid", iso])
 
@@ -336,7 +337,7 @@
         else:
             logging.warn("isomd5sum not installed; not setting up mediacheck")
             return
-            
+
         subprocess.call([implantisomd5, iso])
 
     def _stage_final_image(self):
@@ -384,6 +385,9 @@
             options.extend([ "-eltorito-alt-boot",
                              "-e", "isolinux/efiboot.img",
                              "-no-emul-boot"])
+#                             "-eltorito-alt-boot",
+#                             "-e", "isolinux/macboot.img",
+#                             "-no-emul-boot"])
         return options
 
     def _get_required_packages(self):
@@ -490,28 +494,26 @@
 menu background %(background)s
 menu autoboot Starting ROSA Desktop 2012 in # second{,s}. Press any key to interrupt.
 
-menu clear
+#menu clear
 menu title %(title)s
-menu vshift 8
-menu rows 18
-menu margin 8
+#menu vshift 8
+#menu rows 18
+#menu margin 8
 #menu hidden
-menu helpmsgrow 15
-menu tabmsgrow 13
+#menu helpmsgrow 15
+#menu tabmsgrow 13
+
+menu color border 0 #ffffffff #00000000
+menu color sel 7 #ffffffff #ff000000
+menu color title 0 #ffffffff #00000000
+menu color tabmsg 0 #ffffffff #00000000
+menu color unsel 0 #ffffffff #00000000
+menu color hotsel 0 #ff000000 #ffffffff
+menu color hotkey 7 #ffffffff #ff000000
+menu color timeout_msg 0 #ffffffff #00000000
+menu color timeout 0 #ffffffff #00000000
+menu color cmdline 0 #ffffffff #00000000
 
-menu color border * #00000000 #00000000 none
-menu color sel 0 #ffffffff #00000000 none
-menu color title 0 #ffffffff #00000000 none
-menu color tabmsg 0 #ffffffff #00000000 none
-menu color unsel 0 #ffffffff #00000000 none
-menu color hotsel 0 #ff000000 #ffffffff none
-menu color hotkey 0 #ffffffff #00000000 none
-menu color help 0 #ffffffff #00000000 none
-menu color scrollbar 0 #ffffffff #ff355594 none
-menu color timeout 0 #ffffffff #00000000 none
-menu color timeout_msg 0 #ffffffff #00000000 none
-menu color cmdmark 0 #84b8ffff #00000000 none
-menu color cmdline 0 #ffffffff #00000000 none
 
 menu tabmsg Press Tab for full configuration options on menu items.
 menu separator
@@ -567,11 +569,11 @@
             default = self.__is_default_kernel(kernel, kernels)
 
             if default:
-                long = self.product
+                long = "ROSA Desktop 2012"
             elif kernel.startswith("kernel-"):
-                long = "%s (%s)" % (self.product, kernel[7:])
+                long = "%s (%s)" % ("ROSA Desktop 2012", kernel[7:])
             else:
-                long = "%s (%s)" % (self.product, kernel)
+                long = "%s (%s)" % ("ROSA Desktop 2012", kernel)
 
             # tell dracut not to ask for LUKS passwords or activate mdraid sets
             if isDracut:
@@ -583,7 +585,7 @@
                                            fslabel = self.fslabel,
                                            isofstype = "auto",
                                            liveargs = kern_opts,
-                                           long = "^Start " + long,
+                                           long = "Start " + long,
                                            short = "linux" + index,
                                            extra = "",
                                            help = "",
@@ -594,7 +596,7 @@
                                            fslabel = self.fslabel,
                                            isofstype = "auto",
                                            liveargs = kern_opts,
-                                           long = "^Install " + long,
+                                           long = "Install " + long,
                                            short = "linux" + index,
                                            extra = "",
                                            help = "",
@@ -603,7 +605,7 @@
                                            fslabel = self.fslabel,
                                            isofstype = "auto",
                                            liveargs = kern_opts,
-                                           long = "Start " + long + " in ^basic graphics mode.",
+                                           long = "Start " + long + " in basic graphics mode.",
                                            short = "basic" + index,
                                            extra = "xdriver=vesa nomodeset",
                                            help = "Try this option out if you're having trouble starting.",
@@ -612,7 +614,7 @@
                                            fslabel = self.fslabel,
                                            isofstype = "auto",
                                            liveargs = kern_opts,
-                                           long = "Install " + long + " in ^basic graphics mode.",
+                                           long = "Install " + long + " in basic graphics mode.",
                                            short = "basic" + index,
                                            extra = "xdriver=vesa nomodeset install",
                                            help = "Try this option out if you're having trouble installing.",
@@ -631,7 +633,7 @@
                                                fslabel = self.fslabel,
                                                isofstype = "auto",
                                                liveargs = kern_opts,
-                                               long = "^Test this media & start " + long,
+                                               long = "Test this media & start " + long,
                                                short = "check" + index,
                                                extra = "rd.live.check",
                                                help = "",
@@ -645,14 +647,14 @@
         return (linux, basic, check)
 
     def __get_memtest_stanza(self, isodir):
-        memtest = glob.glob(self._instroot + "/boot/memtest86*")
+        memtest = glob.glob(self._instroot + "/boot/memtest*")
         if not memtest:
             return ""
 
         shutil.copyfile(memtest[0], isodir + "/isolinux/memtest")
 
         return """label memtest
-  menu label Run a ^memory test.
+  menu label Run a memory test.
   text help
     If your system is having issues, an problem with your 
     system's memory may be the cause. Use this utility to 
@@ -663,7 +665,7 @@
 
     def __get_local_stanza(self, isodir):
         return """label local
-  menu label Boot from ^local drive
+  menu label Boot from local drive
   localboot 0xffff
 """
 
@@ -696,9 +698,10 @@
   menu title Troubleshooting
 """
         # Add basic video and check to submenu
-        # my test
-#        for s in basic:
-#            cfg += s
+#        for b, c in zip(basic, check):
+#            cfg += b
+#            if c:
+#                cfg += c
         for b in basic:
             cfg += b
         for c in check:
diff -Nur livecd-tools-18.8.orig/tools/livecd-creator livecd-tools-18.8/tools/livecd-creator
--- livecd-tools-18.8.orig/tools/livecd-creator	2012-08-06 18:49:20.000000000 +0000
+++ livecd-tools-18.8/tools/livecd-creator	2012-10-17 11:03:58.434813055 +0000
@@ -201,7 +201,7 @@
 
     try:
         creator.mount(options.base_on, options.cachedir)
-        creator.install()
+        creator.install_urpmi()
         creator.configure()
         if options.give_shell:
             print "Launching shell. Exit to continue."
